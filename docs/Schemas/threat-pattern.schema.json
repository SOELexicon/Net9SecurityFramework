{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://securityframework.dev/schemas/threat-pattern.schema.json",
  "title": "SecurityFramework Threat Pattern",
  "description": "JSON schema for individual threat detection patterns in SecurityFramework",
  "type": "object",
  "required": ["name", "pattern", "type", "category", "threatMultiplier"],
  "additionalProperties": false,
  "properties": {
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9\\s\\-_\\.]+$",
      "description": "Human-readable pattern name. Must be unique within the pattern set."
    },
    "pattern": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2000,
      "description": "The actual pattern to match against requests. Format depends on pattern type."
    },
    "type": {
      "type": "string",
      "enum": ["Regex", "Wildcard", "Exact", "Contains", "StartsWith", "EndsWith", "MachineLearning"],
      "description": "Pattern matching algorithm to use"
    },
    "category": {
      "type": "string",
      "enum": [
        "SQLInjection",
        "XSS", 
        "PathTraversal",
        "ParameterJacking",
        "BotDetection",
        "Bruteforce",
        "RateLimitViolation",
        "FileUpload",
        "CommandInjection",
        "DataExfiltration",
        "PrivilegeEscalation",
        "BusinessLogic",
        "DataExposure",
        "Custom"
      ],
      "description": "Threat category for organization and reporting"
    },
    "threatMultiplier": {
      "type": "number",
      "minimum": 0.1,
      "maximum": 100,
      "description": "Score multiplier for threat calculation. Higher values indicate more severe threats."
    },
    "isActive": {
      "type": "boolean",
      "default": true,
      "description": "Whether this pattern is currently active and will be evaluated"
    },
    "description": {
      "type": "string",
      "maxLength": 1000,
      "description": "Detailed description of what this pattern detects and why it's important"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "severity": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"],
          "description": "Severity level of threats detected by this pattern"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence level of the pattern (0.0 to 1.0)"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(CWE-\\d+|OWASP-[A-Z0-9\\-]+|CVE-\\d{4}-\\d{4,}|https?://.*|RFC\\d+|NIST\\d+|.*)",
            "maxLength": 200
          },
          "uniqueItems": true,
          "description": "References to security standards, CVEs, documentation, etc."
        },
        "author": {
          "type": "string",
          "maxLength": 100,
          "description": "Pattern author or source"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+(\\.\\d+)?(-[a-zA-Z0-9\\-]+)?$",
          "description": "Pattern version using semantic versioning"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Pattern creation timestamp"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9\\-_]+$",
            "maxLength": 50
          },
          "uniqueItems": true,
          "maxItems": 10,
          "description": "Searchable tags for pattern organization"
        },
        "testCases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/testCase"
          },
          "minItems": 1,
          "maxItems": 50,
          "description": "Test cases to validate pattern behavior"
        },
        "performanceNotes": {
          "type": "string",
          "maxLength": 500,
          "description": "Notes about pattern performance characteristics"
        },
        "falsePositiveRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Estimated false positive rate (0.0 to 1.0)"
        },
        "industry": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["ecommerce", "banking", "healthcare", "government", "education", "saas", "gaming", "media", "general"]
          },
          "uniqueItems": true,
          "description": "Industries where this pattern is most relevant"
        }
      }
    },
    "conditions": {
      "type": "object",
      "additionalProperties": false,
      "description": "Advanced conditional logic for when pattern should be evaluated",
      "properties": {
        "requestMethods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS", "TRACE"]
          },
          "uniqueItems": true,
          "description": "HTTP methods this pattern applies to. If empty, applies to all methods."
        },
        "pathPatterns": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 500
          },
          "uniqueItems": true,
          "description": "URL path patterns where this pattern should be evaluated"
        },
        "excludePaths": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 500
          },
          "uniqueItems": true,
          "description": "URL paths to exclude from pattern evaluation"
        },
        "headers": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\-_]+$": {
              "oneOf": [
                {"type": "string"},
                {"type": "array", "items": {"type": "string"}}
              ]
            }
          },
          "description": "Required headers for pattern activation"
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 100
          },
          "uniqueItems": true,
          "description": "Query parameters that must be present"
        },
        "timeWindows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/timeWindow"
          },
          "description": "Time windows when pattern is active"
        },
        "ipRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/([0-9]|[1-2][0-9]|3[0-2]))?$|^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
          },
          "uniqueItems": true,
          "description": "IP ranges where pattern applies (CIDR notation)"
        },
        "userAgentPatterns": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 200
          },
          "uniqueItems": true,
          "description": "User-Agent patterns for conditional evaluation"
        },
        "contentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_]*\\/[a-zA-Z0-9][a-zA-Z0-9!#$&\\-\\^_]*$"
          },
          "uniqueItems": true,
          "description": "Content-Type headers where pattern applies"
        },
        "minimumRequestSize": {
          "type": "integer",
          "minimum": 0,
          "maximum": 104857600,
          "description": "Minimum request size in bytes for pattern evaluation"
        },
        "maximumRequestSize": {
          "type": "integer",
          "minimum": 0,
          "maximum": 104857600,
          "description": "Maximum request size in bytes for pattern evaluation"
        }
      }
    },
    "actions": {
      "type": "object",
      "additionalProperties": false,
      "description": "Actions to take when pattern matches",
      "properties": {
        "logLevel": {
          "type": "string",
          "enum": ["trace", "debug", "info", "warning", "error", "critical"],
          "default": "warning",
          "description": "Log level for pattern matches"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9\\-_:]+$",
            "maxLength": 50
          },
          "uniqueItems": true,
          "maxItems": 10,
          "description": "Custom tags to add to matched events"
        },
        "webhookUrl": {
          "type": "string",
          "format": "uri",
          "pattern": "^https://.*",
          "description": "HTTPS webhook URL to call on pattern match"
        },
        "webhookHeaders": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\-_]+$": {"type": "string"}
          },
          "description": "Additional headers for webhook requests"
        },
        "autoBlock": {
          "type": "boolean",
          "default": false,
          "description": "Automatically block IP address on pattern match"
        },
        "blockDuration": {
          "type": "string",
          "pattern": "^P(?:\\d+D)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
          "description": "Duration for automatic block (ISO 8601 duration format)"
        },
        "rateLimitMultiplier": {
          "type": "number",
          "minimum": 0.1,
          "maximum": 10,
          "description": "Rate limit multiplier to apply on pattern match"
        },
        "customMetadata": {
          "type": "object",
          "description": "Custom metadata to include with pattern matches"
        }
      }
    },
    "mlConfig": {
      "type": "object",
      "additionalProperties": false,
      "description": "Machine learning configuration (only for ML pattern types)",
      "properties": {
        "modelPath": {
          "type": "string",
          "maxLength": 500,
          "description": "Path to the ML model file"
        },
        "modelType": {
          "type": "string",
          "enum": ["onnx", "mlnet", "tensorflow", "pytorch"],
          "description": "Type of ML model"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 100
          },
          "uniqueItems": true,
          "minItems": 1,
          "description": "Feature names used by the ML model"
        },
        "threshold": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Decision threshold for ML model predictions"
        },
        "confidenceLevel": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Minimum confidence level required for predictions"
        },
        "timeout": {
          "type": "integer",
          "minimum": 10,
          "maximum": 5000,
          "description": "Model inference timeout in milliseconds"
        }
      },
      "if": {
        "properties": {"type": {"const": "MachineLearning"}}
      },
      "then": {
        "required": ["modelPath", "features", "threshold"]
      }
    }
  },
  "definitions": {
    "testCase": {
      "type": "object",
      "additionalProperties": false,
      "required": ["input", "shouldMatch"],
      "properties": {
        "input": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10000,
          "description": "Test input string"
        },
        "shouldMatch": {
          "type": "boolean",
          "description": "Whether the pattern should match this input"
        },
        "description": {
          "type": "string",
          "maxLength": 200,
          "description": "Description of what this test case validates"
        },
        "context": {
          "type": "object",
          "properties": {
            "requestMethod": {
              "type": "string",
              "enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS", "TRACE"]
            },
            "requestPath": {
              "type": "string",
              "maxLength": 1000
            },
            "headers": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9\\-_]+$": {"type": "string"}
              }
            },
            "queryParameters": {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9\\-_]+$": {"type": "string"}
              }
            }
          },
          "description": "Additional context for test case evaluation"
        },
        "expectedThreatScore": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "Expected threat score when pattern matches"
        }
      }
    },
    "timeWindow": {
      "type": "object",
      "additionalProperties": false,
      "required": ["start", "end"],
      "properties": {
        "start": {
          "type": "string",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "Start time in HH:MM format (24-hour)"
        },
        "end": {
          "type": "string",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "End time in HH:MM format (24-hour)"
        },
        "timezone": {
          "type": "string",
          "pattern": "^[A-Z]{3,4}$|^[A-Z][a-z]+/[A-Z][a-z_]+$",
          "default": "UTC",
          "description": "Timezone for the time window (e.g., UTC, EST, America/New_York)"
        },
        "daysOfWeek": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]
          },
          "uniqueItems": true,
          "description": "Days of week when time window applies. If empty, applies to all days."
        }
      }
    }
  },
  "examples": [
    {
      "name": "SQL Injection Basic",
      "pattern": "(?i)(union\\s+select|select\\s+.*\\s+from|insert\\s+into)",
      "type": "Regex",
      "category": "SQLInjection",
      "threatMultiplier": 75,
      "isActive": true,
      "description": "Detects basic SQL injection attempts using common SQL keywords",
      "metadata": {
        "severity": "high",
        "confidence": 0.9,
        "references": ["CWE-89", "OWASP-A03-2021"],
        "author": "SecurityTeam",
        "version": "1.2.0",
        "tags": ["sql", "injection", "database"],
        "testCases": [
          {
            "input": "' UNION SELECT password FROM users--",
            "shouldMatch": true,
            "description": "Classic UNION injection"
          },
          {
            "input": "normal search query",
            "shouldMatch": false,
            "description": "Legitimate search should not match"
          }
        ]
      },
      "conditions": {
        "requestMethods": ["POST", "GET"],
        "excludePaths": ["/search", "/docs"]
      },
      "actions": {
        "logLevel": "error",
        "customTags": ["sql-injection", "critical"],
        "autoBlock": true,
        "blockDuration": "PT1H"
      }
    }
  ]
}